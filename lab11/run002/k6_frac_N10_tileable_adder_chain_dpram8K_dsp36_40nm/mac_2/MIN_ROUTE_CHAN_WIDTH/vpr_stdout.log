VPR FPGA Placement and Routing.
Version: 8.1.0-dev+9e53e9a0a
Revision: v8.0.0-7093-g9e53e9a0a
Compiled: 2023-03-22T18:43:34
Compiler: GNU 11.3.0 on Linux-5.19.0-35-generic x86_64
Build Info: release IPO VTR_ASSERT_LEVEL=2

University of Toronto
verilogtorouting.org
vtr-users@googlegroups.com
This is free open source code under MIT license.

VPR was run with the following command-line:
vpr /home/ahmad/Desktop/OpenFPGA_Work/lab11/run002/k6_frac_N10_tileable_adder_chain_dpram8K_dsp36_40nm/mac_2/MIN_ROUTE_CHAN_WIDTH/arch/k6_frac_N10_tileable_adder_chain_dpram8K_dsp36_40nm.xml mac_2.blif --clock_modeling route


Architecture file: /home/ahmad/Desktop/OpenFPGA_Work/lab11/run002/k6_frac_N10_tileable_adder_chain_dpram8K_dsp36_40nm/mac_2/MIN_ROUTE_CHAN_WIDTH/arch/k6_frac_N10_tileable_adder_chain_dpram8K_dsp36_40nm.xml
Circuit name: mac_2

# Loading Architecture Description
Warning 1: Model 'io' input port 'outpad' has no timing specification (no clock specified to create a sequential input port, not combinationally connected to any outputs, not a clock input)
Warning 2: Model 'io' output port 'inpad' has no timing specification (no clock specified to create a sequential output port, not combinationally connected to any inputs, not a clock output)
Warning 3: Model 'frac_lut6' input port 'in' has no timing specification (no clock specified to create a sequential input port, not combinationally connected to any outputs, not a clock input)
Warning 4: Model 'frac_lut6' output port 'lut6_out' has no timing specification (no clock specified to create a sequential output port, not combinationally connected to any inputs, not a clock output)
Warning 5: Model 'frac_lut6' output port 'lut5_out' has no timing specification (no clock specified to create a sequential output port, not combinationally connected to any inputs, not a clock output)
Warning 6: Model 'frac_lut6' output port 'lut4_out' has no timing specification (no clock specified to create a sequential output port, not combinationally connected to any inputs, not a clock output)
mode 'io[physical]' is defined by user to be disabled in packing
mode 'fle[physical]' is defined by user to be disabled in packing
mode 'fabric[default]' is defined by user to be disabled in packing
mode 'frac_logic[default]' is defined by user to be disabled in packing
# Loading Architecture Description took 0.02 seconds (max_rss 23.2 MiB, delta_rss +0.0 MiB)

Timing analysis: ON
Circuit netlist file: mac_2.net
Circuit placement file: mac_2.place
Circuit routing file: mac_2.route
Circuit SDC file: mac_2.sdc
Vpr floorplanning constraints file: not specified

Packer: ENABLED
Placer: ENABLED
Router: ENABLED
Analysis: ENABLED

VPR was run with the following options:

NetlistOpts.abosrb_buffer_luts            : true
NetlistOpts.sweep_dangling_primary_ios    : true
NetlistOpts.sweep_dangling_nets           : true
NetlistOpts.sweep_dangling_blocks         : true
NetlistOpts.sweep_constant_primary_outputs: false
NetlistOpts.netlist_verbosity             : 1
NetlistOpts.const_gen_inference           : COMB_SEQ

PackerOpts.allow_unrelated_clustering: auto
PackerOpts.alpha_clustering: 0.750000
PackerOpts.beta_clustering: 0.900000
PackerOpts.cluster_seed_type: BLEND2
PackerOpts.connection_driven: true
PackerOpts.global_clocks: true
PackerOpts.hill_climbing_flag: false
PackerOpts.inter_cluster_net_delay: 1.000000
PackerOpts.timing_driven: true
PackerOpts.target_external_pin_util: auto

PlacerOpts.place_freq: PLACE_ONCE
PlacerOpts.place_algorithm: CRITICALITY_TIMING_PLACE
PlacerOpts.pad_loc_type: FREE
PlacerOpts.constraints_file: No constraints file given
PlacerOpts.place_cost_exp: 1.000000
PlacerOpts.place_chan_width: 100
PlacerOpts.inner_loop_recompute_divider: 0
PlacerOpts.recompute_crit_iter: 1
PlacerOpts.timing_tradeoff: 0.500000
PlacerOpts.td_place_exp_first: 1.000000
PlacerOpts.td_place_exp_last: 8.000000
PlacerOpts.delay_offset: 0.000000
PlacerOpts.delay_ramp_delta_threshold: -1
PlacerOpts.delay_ramp_slope: 0.000000
PlacerOpts.tsu_rel_margin: 1.000000
PlacerOpts.tsu_abs_margin: 0.000000
PlacerOpts.post_place_timing_report_file: 
PlacerOpts.allowed_tiles_for_delay_model: 
PlacerOpts.delay_model_reducer: MIN
PlacerOpts.delay_model_type: DELTA
PlacerOpts.rlim_escape_fraction: 0.000000
PlacerOpts.move_stats_file: 
PlacerOpts.placement_saves_per_temperature: 0
PlacerOpts.effort_scaling: CIRCUIT
PlacerOpts.place_delta_delay_matrix_calculation_method: ASTAR_ROUTE
PlaceOpts.seed: 0
AnnealSched.type: AUTO_SCHED
AnnealSched.inner_num: 0.500000

RouterOpts.route_type: DETAILED
RouterOpts.flat_routing: false
RouterOpts.router_algorithm: TIMING_DRIVEN
RouterOpts.base_cost_type: DELAY_NORMALIZED_LENGTH
RouterOpts.fixed_channel_width: NO_FIXED_CHANNEL_WIDTH
RouterOpts.check_route: FULL
RouterOpts.trim_empty_chan: false
RouterOpts.trim_obs_chan: false
RouterOpts.acc_fac: 1.000000
RouterOpts.bb_factor: 3
RouterOpts.bend_cost: 0.000000
RouterOpts.first_iter_pres_fac: 0.000000
RouterOpts.initial_pres_fac: 0.500000
RouterOpts.pres_fac_mult: 1.300000
RouterOpts.max_router_iterations: 50
RouterOpts.min_incremental_reroute_fanout: 16
RouterOpts.do_check_rr_graph: true
RouterOpts.verify_binary_search: false
RouterOpts.min_channel_width_hint: 0
RouterOpts.read_rr_edge_metadata: false
RouterOpts.exit_after_first_routing_iteration: false
RouterOpts.astar_fac: 1.200000
RouterOpts.router_profiler_astar_fac: 1.200000
RouterOpts.criticality_exp: 1.000000
RouterOpts.max_criticality: 0.990000
RouterOpts.init_wirelength_abort_threshold: 0.850000
RouterOpts.save_routing_per_iteration: false
RouterOpts.congested_routing_iteration_threshold_frac: 1.000000
RouterOpts.high_fanout_threshold: 64
RouterOpts.router_debug_net: -2
RouterOpts.router_debug_sink_rr: -2
RouterOpts.router_debug_iteration: -2
RouterOpts.max_convergence_count: 1
RouterOpts.reconvergence_cpd_threshold: 0.990000
RouterOpts.update_lower_bound_delays: true
RouterOpts.first_iteration_timing_report_file: 
RouterOpts.incr_reroute_delay_ripup: AUTO
RouterOpts.route_bb_update: DYNAMIC
RouterOpts.lookahead_type: MAP
RouterOpts.initial_timing: LOOKAHEAD
RouterOpts.router_heap: BINARY_HEAP
RouterOpts.routing_failure_predictor = SAFE
RouterOpts.routing_budgets_algorithm = DISABLE

AnalysisOpts.gen_post_synthesis_netlist: false
AnalysisOpts.timing_report_npaths: 100
AnalysisOpts.timing_report_skew: false
AnalysisOpts.echo_dot_timing_graph_node: -1
AnalysisOpts.timing_report_detail: NETLIST
AnalysisOpts.post_synth_netlist_unconn_input_handling: UNCONNECTED
AnalysisOpts.post_synth_netlist_unconn_output_handling: UNCONNECTED

# Building complex block graph
# Building complex block graph took 0.05 seconds (max_rss 23.2 MiB, delta_rss +0.0 MiB)
Circuit file: mac_2.blif
# Load circuit
# Load circuit took 0.00 seconds (max_rss 23.2 MiB, delta_rss +0.0 MiB)
# Clean circuit
Absorbed 0 LUT buffers
Inferred    0 additional primitive pins as constant generators since they have no combinationally connected inputs
Inferred    0 additional primitive pins as constant generators due to constant inputs
Swept input(s)      : 0
Swept output(s)     : 0 (0 dangling, 0 constant)
Swept net(s)        : 0
Swept block(s)      : 0
Constant Pins Marked: 0
# Clean circuit took 0.00 seconds (max_rss 23.2 MiB, delta_rss +0.0 MiB)
# Compress circuit
# Compress circuit took 0.00 seconds (max_rss 23.2 MiB, delta_rss +0.0 MiB)
# Verify circuit
# Verify circuit took 0.00 seconds (max_rss 23.2 MiB, delta_rss +0.0 MiB)
Circuit Statistics:
  Blocks: 14
    .input :       6
    .output:       4
    6-LUT  :       4
  Nets  : 10
    Avg Fanout:     2.4
    Max Fanout:     4.0
    Min Fanout:     1.0
  Netlist Clocks: 0
# Build Timing Graph
  Timing Graph Nodes: 34
  Timing Graph Edges: 44
  Timing Graph Levels: 4
# Build Timing Graph took 0.00 seconds (max_rss 23.2 MiB, delta_rss +0.0 MiB)
Netlist contains 0 clocks
# Load Timing Constraints

SDC file 'mac_2.sdc' not found
Setting default timing constraints:
   * constrain all primay inputs and primary outputs on a virtual external clock 'virtual_io_clock'
   * optimize virtual clock to run as fast as possible
Timing constraints created 1 clocks
  Constrained Clock 'virtual_io_clock' (Virtual Clock)

# Load Timing Constraints took 0.00 seconds (max_rss 23.2 MiB, delta_rss +0.0 MiB)
# Packing
Begin packing 'mac_2.blif'.

After removing unused inputs...
	total blocks: 14, total nets: 10, total inputs: 6, total outputs: 4
Begin prepacking.

There is one chain in this architecture called "chain" with the following starting points:
	clb[0]/fle[0]/arithmetic[0]/adder[0].cin[0]

0 attraction groups were created during prepacking.
Finish prepacking.
Using inter-cluster delay: 1.33777e-09
Packing with pin utilization targets: io:1,1 clb:0.8,1 memory:1,1 mult_36:1,1
Packing with high fanout thresholds: io:128 clb:32 memory:128 mult_36:128
Starting Clustering - Clustering Progress: 
-------------------   --------------------------   ---------
Molecules processed   Number of clusters created   FPGA size
-------------------   --------------------------   ---------
Failed route at end, repack cluster trying detailed routing at each stage.

Logic Element (fle) detailed count:
  Total number of Logic Elements used : 4
  LEs used for logic and registers    : 0
  LEs used for logic only             : 4
  LEs used for registers only         : 0

Incr Slack updates 1 in 4.473e-06 sec
Full Max Req/Worst Slack updates 1 in 1.727e-06 sec
Incr Max Req/Worst Slack updates 0 in 0 sec
Incr Criticality updates 0 in 0 sec
Full Criticality updates 1 in 2.155e-06 sec
FPGA sized to 10 x 10 (3x2)
Device Utilization: 0.02 (target 1.00)
	Block Utilization: 0.04 Type: io
	Block Utilization: 0.03 Type: clb

Start the iterative improvement process
the iterative improvement process is done
Final Clustering Statistics: 
----------   --------   ------------------------------------   --------------------------
Block Type   # Blocks   Avg. # of input clocks and pins used   Avg. # of output pins used
----------   --------   ------------------------------------   --------------------------
     EMPTY          0                                      0                            0   
        io         10                                    0.4                          0.6   
       clb          1                                      6                            4   
   mult_36          0                                      0                            0   
    memory          0                                      0                            0   
Absorbed logical nets 0 out of 10 nets, 10 nets not absorbed.

Netlist conversion complete.

# Packing took 0.03 seconds (max_rss 23.2 MiB, delta_rss +0.0 MiB)
# Load packing
Begin loading packed FPGA netlist file.
Netlist generated from file 'mac_2.net'.
Detected 0 constant generators (to see names run with higher pack verbosity)
Finished loading packed FPGA netlist file (took 0.117022 seconds).
Warning 7: Treated 0 constant nets as global which will not be routed (to see net names increase packer verbosity).
# Load packing took 0.12 seconds (max_rss 61.1 MiB, delta_rss +38.0 MiB)
Warning 8: Netlist contains 0 global net to non-global architecture pin connections

Pb types usage...
  io         : 10
   inpad     : 6
   outpad    : 4
  clb        : 1
   fle       : 4
    ble5     : 2
     lut5    : 2
      lut    : 2
    ble6     : 2
     lut6    : 2
      lut    : 2

# Create Device
## Build Device Grid
FPGA sized to 10 x 10: 100 grid tiles (3x2)

Resource usage...
	Netlist
		10	blocks of type: io
	Architecture
		256	blocks of type: io
	Netlist
		1	blocks of type: clb
	Architecture
		36	blocks of type: clb
	Netlist
		0	blocks of type: mult_36
	Architecture
		2	blocks of type: mult_36
	Netlist
		0	blocks of type: memory
	Architecture
		8	blocks of type: memory

Device Utilization: 0.02 (target 1.00)
	Physical Tile io:
	Block Utilization: 0.04 Logical Block: io
	Physical Tile clb:
	Block Utilization: 0.03 Logical Block: clb
	Physical Tile memory:
	Block Utilization: 0.00 Logical Block: memory
	Physical Tile mult_36:
	Block Utilization: 0.00 Logical Block: mult_36

## Build Device Grid took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
## Build routing resource graph
SOURCE->OPIN and IPIN->SINK edge count:3380
OPIN->CHANX/CHANY edge count before creating direct connections: 11840
OPIN->CHANX/CHANY edge count after creating direct connections: 11870
CHAN->CHAN type edge count:58180
## Build routing resource graph took 0.05 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
  RR Graph Nodes: 10304
  RR Graph Edges: 73430
# Create Device took 0.06 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)

# Computing router lookahead map
## Computing wire lookahead
## Computing wire lookahead took 0.10 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
## Computing src/opin lookahead
## Computing src/opin lookahead took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
# Computing router lookahead map took 0.10 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
# Computing placement delta delay look-up
## Build routing resource graph
SOURCE->OPIN and IPIN->SINK edge count:3380
OPIN->CHANX/CHANY edge count before creating direct connections: 7484
OPIN->CHANX/CHANY edge count after creating direct connections: 7514
CHAN->CHAN type edge count:37248
## Build routing resource graph took 0.03 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
  RR Graph Nodes: 8524
  RR Graph Edges: 48142
## Computing router lookahead map
### Computing wire lookahead
### Computing wire lookahead took 0.07 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
### Computing src/opin lookahead
### Computing src/opin lookahead took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
## Computing router lookahead map took 0.07 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
## Computing delta delays
## Computing delta delays took 0.01 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
# Computing placement delta delay look-up took 0.11 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
Using simple RL 'Softmax agent' for choosing move types
# Placement
## Initial Placement
Initial placement iteration 0 has finished successfully
## Initial Placement took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)

There are 10 point to point connections in this circuit.


BB estimate of min-dist (placement) wire length: 71

Completed placement consistency check successfully.
Initial placement cost: 1 bb_cost: 1.10938 td_cost: 3.47424e-09
Initial placement estimated Critical Path Delay (CPD): 1.39621 ns
Initial placement estimated setup Total Negative Slack (sTNS): -4.93501 ns
Initial placement estimated setup Worst Negative Slack (sWNS): -1.39621 ns

Initial placement estimated setup slack histogram:
[ -1.4e-09: -1.4e-09) 1 ( 25.0%) |*************************
[ -1.4e-09: -1.3e-09) 0 (  0.0%) |
[ -1.3e-09: -1.3e-09) 0 (  0.0%) |
[ -1.3e-09: -1.3e-09) 0 (  0.0%) |
[ -1.3e-09: -1.3e-09) 0 (  0.0%) |
[ -1.3e-09: -1.2e-09) 0 (  0.0%) |
[ -1.2e-09: -1.2e-09) 2 ( 50.0%) |*************************************************
[ -1.2e-09: -1.2e-09) 0 (  0.0%) |
[ -1.2e-09: -1.1e-09) 0 (  0.0%) |
[ -1.1e-09: -1.1e-09) 1 ( 25.0%) |*************************
Placement contains 0 placement macros involving 0 blocks (average macro size -nan)

Moves per temperature: 12
Warning 9: Starting t: 6 of 11 configurations accepted.

---- ------ ------- ------- ---------- ---------- ------- ---------- -------- ------- ------- ------ -------- --------- ------
Tnum   Time       T Av Cost Av BB Cost Av TD Cost     CPD       sTNS     sWNS Ac Rate Std Dev  R lim Crit Exp Tot Moves  Alpha
      (sec)                                          (ns)       (ns)     (ns)                                                 
---- ------ ------- ------- ---------- ---------- ------- ---------- -------- ------- ------- ------ -------- --------- ------
   1    0.0 7.2e-04   0.958       0.87 2.9584e-09   1.213      -4.73   -1.213   0.500  0.0284    9.0     1.00        12  0.200
   2    0.0 6.9e-04   0.904       0.73 2.7734e-09   1.137      -4.31   -1.137   0.333  0.0698    9.0     1.00        24  0.950
   3    0.0 6.5e-04   0.906       0.55 2.2408e-09   1.091      -4.15   -1.091   0.167  0.0000    8.0     1.84        36  0.950
   4    0.0 6.2e-04   0.999       0.54 2.2352e-09   1.029      -3.89   -1.029   0.167  0.0015    5.8     3.76        48  0.950
   5    0.0 5.9e-04   0.958       0.49 2.2539e-09   1.029      -3.89   -1.029   0.250  0.0404    4.2     5.16        60  0.950
   6    0.0 5.6e-04   0.948       0.44 2.081e-09    1.014      -3.79   -1.014   0.250  0.0299    3.4     5.87        72  0.950
   7    0.0 5.3e-04   1.000       0.42 2.1385e-09   1.014      -3.86   -1.014   0.167  0.0000    2.8     6.44        84  0.950
   8    0.0 5.1e-04   0.986       0.42 2.0588e-09   1.014      -3.86   -1.014   0.250  0.0121    2.0     7.10        96  0.950
   9    0.0 0.0e+00   0.946       0.44 1.8118e-09   1.014      -3.86   -1.014   0.167  0.0039    2.0     7.10       108  0.950
## Placement Quench took 0.00 seconds (max_rss 61.4 MiB)
post-quench CPD = 0.987675 (ns) 

BB estimate of min-dist (placement) wire length: 30

Completed placement consistency check successfully.

Swaps called: 119

Aborted Move Reasons:
  No moves aborted

Placement estimated critical path delay (least slack): 0.987675 ns, Fmax: 1012.48 MHz
Placement estimated setup Worst Negative Slack (sWNS): -0.987675 ns
Placement estimated setup Total Negative Slack (sTNS): -3.72457 ns

Placement estimated setup slack histogram:
[ -9.9e-10: -9.8e-10) 1 ( 25.0%) |**************************************************
[ -9.8e-10: -9.7e-10) 0 (  0.0%) |
[ -9.7e-10: -9.5e-10) 0 (  0.0%) |
[ -9.5e-10: -9.4e-10) 1 ( 25.0%) |**************************************************
[ -9.4e-10: -9.3e-10) 0 (  0.0%) |
[ -9.3e-10: -9.2e-10) 0 (  0.0%) |
[ -9.2e-10: -9.1e-10) 1 ( 25.0%) |**************************************************
[ -9.1e-10:   -9e-10) 0 (  0.0%) |
[   -9e-10: -8.9e-10) 0 (  0.0%) |
[ -8.9e-10: -8.8e-10) 1 ( 25.0%) |**************************************************

Placement estimated geomean non-virtual intra-domain period: nan ns (nan MHz)
Placement estimated fanout-weighted geomean non-virtual intra-domain period: nan ns (nan MHz)

Placement cost: 0.943438, bb_cost: 0.46875, td_cost: 1.65588e-09, 

Placement resource usage:
  io  implemented as io : 10
  clb implemented as clb: 1

Placement number of temperatures: 9
Placement total # of swap attempts: 119
	Swaps accepted:  33 (27.7 %)
	Swaps rejected:  86 (72.3 %)
	Swaps aborted :   0 ( 0.0 %)


Percentage of different move types:
	Uniform move: 4.20 % (acc=40.00 %, rej=60.00 %, aborted=0.00 %)
	Median move: 2.52 % (acc=33.33 %, rej=66.67 %, aborted=0.00 %)
	W. Centroid move: 14.29 % (acc=17.65 %, rej=82.35 %, aborted=0.00 %)
	Centroid move: 72.27 % (acc=29.07 %, rej=70.93 %, aborted=0.00 %)
	Crit. Uniform move: 1.68 % (acc=0.00 %, rej=100.00 %, aborted=0.00 %)
	Feasible Region move: 5.04 % (acc=33.33 %, rej=66.67 %, aborted=0.00 %)

Placement Quench timing analysis took 1.093e-05 seconds (6.409e-06 STA, 4.521e-06 slack) (1 full updates: 1 setup, 0 hold, 0 combined).
Placement Total  timing analysis took 0.000232905 seconds (0.000163418 STA, 6.9487e-05 slack) (11 full updates: 11 setup, 0 hold, 0 combined).
update_td_costs: connections 0 nets 0 sum_nets 0 total 0
# Placement took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)

# Routing
Initializing minimum channel width search based on maximum CLB pins

Attempting to route at 64 channels (binary search bounds: [-1, -1])
RR graph channel widths unchanged, skipping RR graph rebuild
Confirming router algorithm: TIMING_DRIVEN.
## Initializing router criticalities
Initial Net Connection Criticality Histogram:
[        0:      0.1) 0 (  0.0%) |
[      0.1:      0.2) 0 (  0.0%) |
[      0.2:      0.3) 0 (  0.0%) |
[      0.3:      0.4) 0 (  0.0%) |
[      0.4:      0.5) 0 (  0.0%) |
[      0.5:      0.6) 0 (  0.0%) |
[      0.6:      0.7) 1 ( 10.0%) |************
[      0.7:      0.8) 4 ( 40.0%) |*************************************************
[      0.8:      0.9) 3 ( 30.0%) |*************************************
[      0.9:        1) 2 ( 20.0%) |*************************
## Initializing router criticalities took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
---- ------ ------- ---- ------- ------- ------- ----------------- --------------- -------- ---------- ---------- ---------- ---------- --------
Iter   Time    pres  BBs    Heap  Re-Rtd  Re-Rtd Overused RR Nodes      Wirelength      CPD       sTNS       sWNS       hTNS       hWNS Est Succ
      (sec)     fac Updt    push    Nets   Conns                                       (ns)       (ns)       (ns)       (ns)       (ns)     Iter
---- ------ ------- ---- ------- ------- ------- ----------------- --------------- -------- ---------- ---------- ---------- ---------- --------
   1    0.0     0.0    0     651      10      10       6 ( 0.070%)      70 ( 0.8%)    1.268     -4.827     -1.268      0.000      0.000      N/A
Incr Slack updates 11 in 2.0213e-05 sec
Full Max Req/Worst Slack updates 7 in 1.1508e-05 sec
Incr Max Req/Worst Slack updates 4 in 4.692e-06 sec
Incr Criticality updates 4 in 7.3e-06 sec
Full Criticality updates 7 in 1.2876e-05 sec
   2    0.0     0.5    1     275       5       5       4 ( 0.047%)      70 ( 0.8%)    1.268     -4.827     -1.268      0.000      0.000      N/A
   3    0.0     0.6    0     316       5       5       2 ( 0.023%)      72 ( 0.8%)    1.268     -4.868     -1.268      0.000      0.000      N/A
   4    0.0     0.8    0      53       1       1       0 ( 0.000%)      73 ( 0.8%)    1.268     -4.888     -1.268      0.000      0.000      N/A
Restoring best routing
Critical path: 1.26792 ns
Successfully routed after 4 routing iterations.
Final Net Connection Criticality Histogram:
[        0:      0.1) 0 (  0.0%) |
[      0.1:      0.2) 0 (  0.0%) |
[      0.2:      0.3) 0 (  0.0%) |
[      0.3:      0.4) 0 (  0.0%) |
[      0.4:      0.5) 0 (  0.0%) |
[      0.5:      0.6) 0 (  0.0%) |
[      0.6:      0.7) 0 (  0.0%) |
[      0.7:      0.8) 0 (  0.0%) |
[      0.8:      0.9) 1 ( 10.0%) |*****
[      0.9:        1) 9 ( 90.0%) |*************************************************
Router Stats: total_nets_routed: 21 total_connections_routed: 21 total_heap_pushes: 1295 total_heap_pops: 397

Attempting to route at 32 channels (binary search bounds: [-1, 64])
## Build routing resource graph
SOURCE->OPIN and IPIN->SINK edge count:3380
OPIN->CHANX/CHANY edge count before creating direct connections: 3996
OPIN->CHANX/CHANY edge count after creating direct connections: 4026
CHAN->CHAN type edge count:18992
## Build routing resource graph took 0.01 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
  RR Graph Nodes: 6940
  RR Graph Edges: 26398
Confirming router algorithm: TIMING_DRIVEN.
## Computing router lookahead map
### Computing wire lookahead
### Computing wire lookahead took 0.05 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
### Computing src/opin lookahead
### Computing src/opin lookahead took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
## Computing router lookahead map took 0.05 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
## Initializing router criticalities
Initial Net Connection Criticality Histogram:
[        0:      0.1) 0 (  0.0%) |
[      0.1:      0.2) 0 (  0.0%) |
[      0.2:      0.3) 0 (  0.0%) |
[      0.3:      0.4) 0 (  0.0%) |
[      0.4:      0.5) 0 (  0.0%) |
[      0.5:      0.6) 0 (  0.0%) |
[      0.6:      0.7) 1 ( 10.0%) |************
[      0.7:      0.8) 4 ( 40.0%) |*************************************************
[      0.8:      0.9) 3 ( 30.0%) |*************************************
[      0.9:        1) 2 ( 20.0%) |*************************
## Initializing router criticalities took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
---- ------ ------- ---- ------- ------- ------- ----------------- --------------- -------- ---------- ---------- ---------- ---------- --------
Iter   Time    pres  BBs    Heap  Re-Rtd  Re-Rtd Overused RR Nodes      Wirelength      CPD       sTNS       sWNS       hTNS       hWNS Est Succ
      (sec)     fac Updt    push    Nets   Conns                                       (ns)       (ns)       (ns)       (ns)       (ns)     Iter
---- ------ ------- ---- ------- ------- ------- ----------------- --------------- -------- ---------- ---------- ---------- ---------- --------
   1    0.0     0.0    0     536      10      10       7 ( 0.101%)      75 ( 1.6%)    1.294     -4.987     -1.294      0.000      0.000      N/A
   2    0.0     0.5    0     293       6       6       5 ( 0.072%)      75 ( 1.6%)    1.294     -4.987     -1.294      0.000      0.000      N/A
   3    0.0     0.6    0     300       6       6       5 ( 0.072%)      75 ( 1.6%)    1.294     -4.987     -1.294      0.000      0.000      N/A
   4    0.0     0.8    0     318       6       6       5 ( 0.072%)      75 ( 1.6%)    1.294     -4.987     -1.294      0.000      0.000      N/A
   5    0.0     1.1    0     301       5       5       3 ( 0.043%)      78 ( 1.7%)    1.315     -5.049     -1.315      0.000      0.000      N/A
   6    0.0     1.4    0     212       3       3       2 ( 0.029%)      79 ( 1.7%)    1.316     -5.073     -1.316      0.000      0.000      N/A
   7    0.0     1.9    0     278       4       4       2 ( 0.029%)      79 ( 1.7%)    1.316     -5.073     -1.316      0.000      0.000      N/A
   8    0.0     2.4    0     443       4       4       3 ( 0.043%)      76 ( 1.6%)    1.316     -5.052     -1.316      0.000      0.000      N/A
   9    0.0     3.1    0     631       4       4       1 ( 0.014%)      87 ( 1.9%)    1.469     -5.349     -1.469      0.000      0.000      N/A
  10    0.0     4.1    0     116       2       2       1 ( 0.014%)      80 ( 1.7%)    1.394     -5.309     -1.394      0.000      0.000       11
  11    0.0     5.3    1     303       3       3       0 ( 0.000%)      83 ( 1.8%)    1.443     -5.357     -1.443      0.000      0.000       10
Restoring best routing
Critical path: 1.44258 ns
Successfully routed after 11 routing iterations.
Final Net Connection Criticality Histogram:
[        0:      0.1) 0 (  0.0%) |
[      0.1:      0.2) 0 (  0.0%) |
[      0.2:      0.3) 0 (  0.0%) |
[      0.3:      0.4) 0 (  0.0%) |
[      0.4:      0.5) 0 (  0.0%) |
[      0.5:      0.6) 0 (  0.0%) |
[      0.6:      0.7) 0 (  0.0%) |
[      0.7:      0.8) 0 (  0.0%) |
[      0.8:      0.9) 1 ( 10.0%) |*****
[      0.9:        1) 9 ( 90.0%) |*************************************************
Router Stats: total_nets_routed: 53 total_connections_routed: 53 total_heap_pushes: 3731 total_heap_pops: 1194

Attempting to route at 16 channels (binary search bounds: [-1, 32])
## Build routing resource graph
SOURCE->OPIN and IPIN->SINK edge count:3380
OPIN->CHANX/CHANY edge count before creating direct connections: 2008
OPIN->CHANX/CHANY edge count after creating direct connections: 2038
CHAN->CHAN type edge count:9240
## Build routing resource graph took 0.01 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
  RR Graph Nodes: 6148
  RR Graph Edges: 14658
Confirming router algorithm: TIMING_DRIVEN.
## Computing router lookahead map
### Computing wire lookahead
### Computing wire lookahead took 0.03 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
### Computing src/opin lookahead
Warning 10: Found no more sample locations for SOURCE in clb
Warning 11: Found no more sample locations for OPIN in clb
Warning 12: Found no more sample locations for SOURCE in memory
Warning 13: Found no more sample locations for SOURCE in mult_36
### Computing src/opin lookahead took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
## Computing router lookahead map took 0.03 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
## Initializing router criticalities
Initial Net Connection Criticality Histogram:
[        0:      0.1) 6 ( 60.0%) |*************************************************
[      0.1:      0.2) 0 (  0.0%) |
[      0.2:      0.3) 0 (  0.0%) |
[      0.3:      0.4) 0 (  0.0%) |
[      0.4:      0.5) 0 (  0.0%) |
[      0.5:      0.6) 0 (  0.0%) |
[      0.6:      0.7) 0 (  0.0%) |
[      0.7:      0.8) 0 (  0.0%) |
[      0.8:      0.9) 0 (  0.0%) |
[      0.9:        1) 4 ( 40.0%) |*********************************
## Initializing router criticalities took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
---- ------ ------- ---- ------- ------- ------- ----------------- --------------- -------- ---------- ---------- ---------- ---------- --------
Iter   Time    pres  BBs    Heap  Re-Rtd  Re-Rtd Overused RR Nodes      Wirelength      CPD       sTNS       sWNS       hTNS       hWNS Est Succ
      (sec)     fac Updt    push    Nets   Conns                                       (ns)       (ns)       (ns)       (ns)       (ns)     Iter
---- ------ ------- ---- ------- ------- ------- ----------------- --------------- -------- ---------- ---------- ---------- ---------- --------
Warning 14: No routing path for connection to sink_rr 4310, retrying with full device bounding box
Cannot route from clb[0].O[16] (RR node: 3103 class: 18 capacity: 1 fan-in: 0 fan-out: 1 SOURCE:3103 (5,8)) to io[1].outpad[0] (RR node: 4310 class: 2 capacity: 1 fan-in: 1 fan-out: 0 SINK:4310 (7,9)) -- no possible path
Failed to route connection from 'out[1]' to 'out:out[0]' for net 'out[0]' (#9)
Routing failed for net 9

Attempting to route at 24 channels (binary search bounds: [16, 32])
## Build routing resource graph
SOURCE->OPIN and IPIN->SINK edge count:3380
OPIN->CHANX/CHANY edge count before creating direct connections: 2748
OPIN->CHANX/CHANY edge count after creating direct connections: 2778
CHAN->CHAN type edge count:14124
## Build routing resource graph took 0.02 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
  RR Graph Nodes: 6544
  RR Graph Edges: 20282
Confirming router algorithm: TIMING_DRIVEN.
## Computing router lookahead map
### Computing wire lookahead
### Computing wire lookahead took 0.03 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
### Computing src/opin lookahead
### Computing src/opin lookahead took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
## Computing router lookahead map took 0.03 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
## Initializing router criticalities
Initial Net Connection Criticality Histogram:
[        0:      0.1) 0 (  0.0%) |
[      0.1:      0.2) 0 (  0.0%) |
[      0.2:      0.3) 0 (  0.0%) |
[      0.3:      0.4) 0 (  0.0%) |
[      0.4:      0.5) 0 (  0.0%) |
[      0.5:      0.6) 0 (  0.0%) |
[      0.6:      0.7) 1 ( 10.0%) |************
[      0.7:      0.8) 4 ( 40.0%) |*************************************************
[      0.8:      0.9) 3 ( 30.0%) |*************************************
[      0.9:        1) 2 ( 20.0%) |*************************
## Initializing router criticalities took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
---- ------ ------- ---- ------- ------- ------- ----------------- --------------- -------- ---------- ---------- ---------- ---------- --------
Iter   Time    pres  BBs    Heap  Re-Rtd  Re-Rtd Overused RR Nodes      Wirelength      CPD       sTNS       sWNS       hTNS       hWNS Est Succ
      (sec)     fac Updt    push    Nets   Conns                                       (ns)       (ns)       (ns)       (ns)       (ns)     Iter
---- ------ ------- ---- ------- ------- ------- ----------------- --------------- -------- ---------- ---------- ---------- ---------- --------
   1    0.0     0.0    0     756      10      10       7 ( 0.107%)      87 ( 2.5%)    1.502     -5.287     -1.502      0.000      0.000      N/A
   2    0.0     0.5    0     245       6       6       5 ( 0.076%)      87 ( 2.5%)    1.502     -5.287     -1.502      0.000      0.000      N/A
   3    0.0     0.6    0     214       5       5       4 ( 0.061%)      86 ( 2.5%)    1.502     -5.262     -1.502      0.000      0.000      N/A
   4    0.0     0.8    0     216       5       5       4 ( 0.061%)      86 ( 2.5%)    1.502     -5.262     -1.502      0.000      0.000      N/A
   5    0.0     1.1    0     240       5       5       4 ( 0.061%)      86 ( 2.5%)    1.502     -5.262     -1.502      0.000      0.000      N/A
   6    0.0     1.4    0     248       4       4       2 ( 0.031%)      88 ( 2.5%)    1.552     -5.434     -1.552      0.000      0.000      N/A
   7    0.0     1.9    0      39       1       1       0 ( 0.000%)      89 ( 2.6%)    1.574     -5.551     -1.574      0.000      0.000      N/A
Restoring best routing
Critical path: 1.57419 ns
Successfully routed after 7 routing iterations.
Final Net Connection Criticality Histogram:
[        0:      0.1) 0 (  0.0%) |
[      0.1:      0.2) 0 (  0.0%) |
[      0.2:      0.3) 0 (  0.0%) |
[      0.3:      0.4) 0 (  0.0%) |
[      0.4:      0.5) 0 (  0.0%) |
[      0.5:      0.6) 0 (  0.0%) |
[      0.6:      0.7) 0 (  0.0%) |
[      0.7:      0.8) 1 ( 10.0%) |*******
[      0.8:      0.9) 2 ( 20.0%) |**************
[      0.9:        1) 7 ( 70.0%) |*************************************************
Router Stats: total_nets_routed: 36 total_connections_routed: 36 total_heap_pushes: 1958 total_heap_pops: 635

Attempting to route at 20 channels (binary search bounds: [16, 24])
## Build routing resource graph
SOURCE->OPIN and IPIN->SINK edge count:3380
OPIN->CHANX/CHANY edge count before creating direct connections: 2368
OPIN->CHANX/CHANY edge count after creating direct connections: 2398
CHAN->CHAN type edge count:11988
## Build routing resource graph took 0.01 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
  RR Graph Nodes: 6344
  RR Graph Edges: 17766
Confirming router algorithm: TIMING_DRIVEN.
## Computing router lookahead map
### Computing wire lookahead
### Computing wire lookahead took 0.03 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
### Computing src/opin lookahead
### Computing src/opin lookahead took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
## Computing router lookahead map took 0.03 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
## Initializing router criticalities
Initial Net Connection Criticality Histogram:
[        0:      0.1) 0 (  0.0%) |
[      0.1:      0.2) 0 (  0.0%) |
[      0.2:      0.3) 0 (  0.0%) |
[      0.3:      0.4) 0 (  0.0%) |
[      0.4:      0.5) 0 (  0.0%) |
[      0.5:      0.6) 0 (  0.0%) |
[      0.6:      0.7) 1 ( 10.0%) |************
[      0.7:      0.8) 4 ( 40.0%) |*************************************************
[      0.8:      0.9) 3 ( 30.0%) |*************************************
[      0.9:        1) 2 ( 20.0%) |*************************
## Initializing router criticalities took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
---- ------ ------- ---- ------- ------- ------- ----------------- --------------- -------- ---------- ---------- ---------- ---------- --------
Iter   Time    pres  BBs    Heap  Re-Rtd  Re-Rtd Overused RR Nodes      Wirelength      CPD       sTNS       sWNS       hTNS       hWNS Est Succ
      (sec)     fac Updt    push    Nets   Conns                                       (ns)       (ns)       (ns)       (ns)       (ns)     Iter
---- ------ ------- ---- ------- ------- ------- ----------------- --------------- -------- ---------- ---------- ---------- ---------- --------
   1    0.0     0.0    0     666      10      10       5 ( 0.079%)      77 ( 2.7%)    1.521     -5.058     -1.521      0.000      0.000      N/A
   2    0.0     0.5    0     198       5       5       3 ( 0.047%)      77 ( 2.7%)    1.521     -5.058     -1.521      0.000      0.000      N/A
   3    0.0     0.6    0     122       3       3       3 ( 0.047%)      78 ( 2.7%)    1.521     -5.080     -1.521      0.000      0.000      N/A
   4    0.0     0.8    0     231       5       5       3 ( 0.047%)      77 ( 2.7%)    1.521     -5.058     -1.521      0.000      0.000      N/A
   5    0.0     1.1    0     183       3       3       3 ( 0.047%)      77 ( 2.7%)    1.521     -5.063     -1.521      0.000      0.000      N/A
   6    0.0     1.4    0     594       5       5       2 ( 0.032%)      80 ( 2.8%)    1.576     -5.282     -1.576      0.000      0.000      N/A
   7    0.0     1.9    0     194       3       3       3 ( 0.047%)      78 ( 2.7%)    1.521     -5.080     -1.521      0.000      0.000      N/A
   8    0.0     2.4    0     492       5       5       2 ( 0.032%)      81 ( 2.8%)    1.594     -5.278     -1.594      0.000      0.000      N/A
   9    0.0     3.1    0     718       4       4       2 ( 0.032%)      80 ( 2.8%)    1.576     -5.282     -1.576      0.000      0.000      N/A
  10    0.0     4.1    0      67       2       2       2 ( 0.032%)      81 ( 2.8%)    1.619     -5.358     -1.619      0.000      0.000       18
  11    0.0     5.3    0     633       4       4       0 ( 0.000%)      98 ( 3.4%)    1.629     -5.859     -1.629      0.000      0.000       27
Restoring best routing
Critical path: 1.62888 ns
Successfully routed after 11 routing iterations.
Final Net Connection Criticality Histogram:
[        0:      0.1) 0 (  0.0%) |
[      0.1:      0.2) 0 (  0.0%) |
[      0.2:      0.3) 0 (  0.0%) |
[      0.3:      0.4) 0 (  0.0%) |
[      0.4:      0.5) 0 (  0.0%) |
[      0.5:      0.6) 0 (  0.0%) |
[      0.6:      0.7) 0 (  0.0%) |
[      0.7:      0.8) 1 ( 10.0%) |******
[      0.8:      0.9) 1 ( 10.0%) |******
[      0.9:        1) 8 ( 80.0%) |*************************************************
Router Stats: total_nets_routed: 49 total_connections_routed: 49 total_heap_pushes: 4098 total_heap_pops: 1366

Attempting to route at 18 channels (binary search bounds: [16, 20])
## Build routing resource graph
SOURCE->OPIN and IPIN->SINK edge count:3380
OPIN->CHANX/CHANY edge count before creating direct connections: 2180
OPIN->CHANX/CHANY edge count after creating direct connections: 2210
CHAN->CHAN type edge count:11004
## Build routing resource graph took 0.01 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
  RR Graph Nodes: 6244
  RR Graph Edges: 16594
Confirming router algorithm: TIMING_DRIVEN.
## Computing router lookahead map
### Computing wire lookahead
### Computing wire lookahead took 0.03 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
### Computing src/opin lookahead
Warning 15: Found no more sample locations for SOURCE in clb
Warning 16: Found no more sample locations for OPIN in clb
Warning 17: Found no more sample locations for SOURCE in memory
Warning 18: Found no more sample locations for SOURCE in mult_36
### Computing src/opin lookahead took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
## Computing router lookahead map took 0.03 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
## Initializing router criticalities
Initial Net Connection Criticality Histogram:
[        0:      0.1) 0 (  0.0%) |
[      0.1:      0.2) 0 (  0.0%) |
[      0.2:      0.3) 0 (  0.0%) |
[      0.3:      0.4) 0 (  0.0%) |
[      0.4:      0.5) 0 (  0.0%) |
[      0.5:      0.6) 0 (  0.0%) |
[      0.6:      0.7) 1 ( 10.0%) |************
[      0.7:      0.8) 4 ( 40.0%) |*************************************************
[      0.8:      0.9) 3 ( 30.0%) |*************************************
[      0.9:        1) 2 ( 20.0%) |*************************
## Initializing router criticalities took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
---- ------ ------- ---- ------- ------- ------- ----------------- --------------- -------- ---------- ---------- ---------- ---------- --------
Iter   Time    pres  BBs    Heap  Re-Rtd  Re-Rtd Overused RR Nodes      Wirelength      CPD       sTNS       sWNS       hTNS       hWNS Est Succ
      (sec)     fac Updt    push    Nets   Conns                                       (ns)       (ns)       (ns)       (ns)       (ns)     Iter
---- ------ ------- ---- ------- ------- ------- ----------------- --------------- -------- ---------- ---------- ---------- ---------- --------
   1    0.0     0.0    0     330      10      10       5 ( 0.080%)      68 ( 2.6%)    1.312     -4.816     -1.312      0.000      0.000      N/A
   2    0.0     0.5    0     163       5       5       3 ( 0.048%)      68 ( 2.6%)    1.312     -4.816     -1.312      0.000      0.000      N/A
   3    0.0     0.6    0     177       5       5       3 ( 0.048%)      68 ( 2.6%)    1.312     -4.816     -1.312      0.000      0.000      N/A
   4    0.0     0.8    0     186       5       5       3 ( 0.048%)      68 ( 2.6%)    1.312     -4.816     -1.312      0.000      0.000      N/A
   5    0.0     1.1    0     210       6       6       3 ( 0.048%)      71 ( 2.7%)    1.368     -4.984     -1.368      0.000      0.000      N/A
   6    0.0     1.4    0     216       6       6       2 ( 0.032%)      75 ( 2.9%)    1.376     -5.065     -1.376      0.000      0.000      N/A
   7    0.0     1.9    0      97       3       3       2 ( 0.032%)      73 ( 2.8%)    1.419     -5.137     -1.419      0.000      0.000      N/A
   8    0.0     2.4    0     204       5       5       2 ( 0.032%)      77 ( 3.0%)    1.434     -5.303     -1.434      0.000      0.000      N/A
   9    0.0     3.1    0     200       5       5       1 ( 0.016%)      79 ( 3.0%)    1.401     -5.138     -1.401      0.000      0.000      N/A
  10    0.0     4.1    0     373       5       5       2 ( 0.032%)      82 ( 3.2%)    1.513     -5.383     -1.513      0.000      0.000       10
  11    0.0     5.3    1     130       4       4       1 ( 0.016%)      80 ( 3.1%)    1.434     -5.303     -1.434      0.000      0.000       16
  12    0.0     6.9    0     298       5       5       0 ( 0.000%)      90 ( 3.5%)    1.546     -5.537     -1.546      0.000      0.000       12
Restoring best routing
Critical path: 1.54578 ns
Successfully routed after 12 routing iterations.
Final Net Connection Criticality Histogram:
[        0:      0.1) 0 (  0.0%) |
[      0.1:      0.2) 0 (  0.0%) |
[      0.2:      0.3) 0 (  0.0%) |
[      0.3:      0.4) 0 (  0.0%) |
[      0.4:      0.5) 0 (  0.0%) |
[      0.5:      0.6) 0 (  0.0%) |
[      0.6:      0.7) 0 (  0.0%) |
[      0.7:      0.8) 0 (  0.0%) |
[      0.8:      0.9) 2 ( 20.0%) |************
[      0.9:        1) 8 ( 80.0%) |*************************************************
Router Stats: total_nets_routed: 64 total_connections_routed: 64 total_heap_pushes: 2584 total_heap_pops: 913
## Build routing resource graph
SOURCE->OPIN and IPIN->SINK edge count:3380
OPIN->CHANX/CHANY edge count before creating direct connections: 2180
OPIN->CHANX/CHANY edge count after creating direct connections: 2210
CHAN->CHAN type edge count:11004
## Build routing resource graph took 0.01 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
  RR Graph Nodes: 6244
  RR Graph Edges: 16594
Best routing used a channel width factor of 18.
# Routing took 0.26 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)

Checking to ensure routing is legal...
# Checking to ensure non-configurable edges are legal
# Checking to ensure non-configurable edges are legal took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
Completed routing consistency check successfully.

Serial number (magic cookie) for the routing is: -146165
Circuit successfully routed with a channel width factor of 18.
# Synchronize the packed netlist to routing optimization
## Annotating rr_node with routed nets
## Annotating rr_node with routed nets took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
Found 11 mismatches between routing and packing results.
Fixed 6 routing traces due to mismatch between routing and packing results.
# Synchronize the packed netlist to routing optimization took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
Final Clustering Statistics: 
----------   --------   ------------------------------------   --------------------------
Block Type   # Blocks   Avg. # of input clocks and pins used   Avg. # of output pins used
----------   --------   ------------------------------------   --------------------------
     EMPTY          0                                      0                            0   
        io         10                                    0.4                          0.6   
       clb          1                                      6                            4   
   mult_36          0                                      0                            0   
    memory          0                                      0                            0   
Absorbed logical nets 0 out of 10 nets, 10 nets not absorbed.


Average number of bends per net: 2.00000  Maximum # of bends: 3

Number of global nets: 0
Number of routed nets (nonglobal): 10
Wire length results (in units of 1 clb segments)...
	Total wirelength: 90, average net length: 9.00000
	Maximum net length: 15

Wire length results in terms of physical segments...
	Total wiring segments used: 31, average wire segments per net: 3.10000
	Maximum segments used by a net: 5
	Total local nets with reserved CLB opins: 0

Routing channel utilization histogram:
[        1:      inf)   0 (  0.0%) |
[      0.9:        1)   0 (  0.0%) |
[      0.8:      0.9)   0 (  0.0%) |
[      0.7:      0.8)   0 (  0.0%) |
[      0.5:      0.6)   0 (  0.0%) |
[      0.4:      0.5)   4 (  2.5%) |*
[      0.3:      0.4)   4 (  2.5%) |*
[      0.2:      0.3)   8 (  4.9%) |***
[      0.1:      0.2)   8 (  4.9%) |***
[        0:      0.1) 138 ( 85.2%) |***********************************************
Maximum routing channel utilization:       0.5 at (6,8)

X - Directed channels:   j max occ ave occ capacity
                      ---- ------- ------- --------
                         0       0   0.000       18
                         1       0   0.000       18
                         2       0   0.000       18
                         3       0   0.000       18
                         4       1   0.300       18
                         5       0   0.000       18
                         6       0   0.000       18
                         7       5   2.300       18
                         8       9   3.800       18
Y - Directed channels:   i max occ ave occ capacity
                      ---- ------- ------- --------
                         0       0   0.000       18
                         1       0   0.000       18
                         2       1   0.100       18
                         3       1   0.100       18
                         4       0   0.000       18
                         5       6   1.500       18
                         6       1   0.200       18
                         7       2   0.200       18
                         8       2   0.500       18

Total tracks in x-direction: 162, in y-direction: 162

Logic area (in minimum width transistor areas, excludes I/Os and empty grid tiles)...
	Total logic block area (Warning, need to add pitch of routing to blocks with height > 3): 7.11618e+06
	Total used logic block area: 53894

Routing area (in minimum width transistor areas)...
	Total routing area: 106764., per logic tile: 1067.64

Total Number of Wiring Segments by Direction: direction length number
                                              --------- ------ -------
                                                      X      4    444
                                                      Y      4    444

X - Directed Wiring Segment usage by length: length utilization
                                             ------ -----------
                                            4      0.0383

Y - Directed Wiring Segment usage by length: length utilization
                                             ------ -----------
                                            4      0.0315

Segment usage by type (index): name type utilization
                               ---- ---- -----------
                                 L4    0      0.0698

Final hold Worst Negative Slack (hWNS): 0 ns
Final hold Total Negative Slack (hTNS): 0 ns

Final hold slack histogram:
[  9.6e-10:  9.8e-10) 1 ( 25.0%) |**************************************************
[  9.8e-10:    1e-09) 1 ( 25.0%) |**************************************************
[    1e-09:    1e-09) 0 (  0.0%) |
[    1e-09:  1.1e-09) 0 (  0.0%) |
[  1.1e-09:  1.1e-09) 1 ( 25.0%) |**************************************************
[  1.1e-09:  1.1e-09) 0 (  0.0%) |
[  1.1e-09:  1.1e-09) 0 (  0.0%) |
[  1.1e-09:  1.2e-09) 0 (  0.0%) |
[  1.2e-09:  1.2e-09) 0 (  0.0%) |
[  1.2e-09:  1.2e-09) 1 ( 25.0%) |**************************************************

Final critical path delay (least slack): 1.54578 ns, Fmax: 646.924 MHz
Final setup Worst Negative Slack (sWNS): -1.54578 ns
Final setup Total Negative Slack (sTNS): -5.53749 ns

Final setup slack histogram:
[ -1.5e-09: -1.5e-09) 1 ( 25.0%) |**************************************************
[ -1.5e-09: -1.5e-09) 0 (  0.0%) |
[ -1.5e-09: -1.5e-09) 0 (  0.0%) |
[ -1.5e-09: -1.4e-09) 0 (  0.0%) |
[ -1.4e-09: -1.4e-09) 1 ( 25.0%) |**************************************************
[ -1.4e-09: -1.4e-09) 0 (  0.0%) |
[ -1.4e-09: -1.3e-09) 0 (  0.0%) |
[ -1.3e-09: -1.3e-09) 1 ( 25.0%) |**************************************************
[ -1.3e-09: -1.3e-09) 0 (  0.0%) |
[ -1.3e-09: -1.3e-09) 1 ( 25.0%) |**************************************************

Final geomean non-virtual intra-domain period: nan ns (nan MHz)
Final fanout-weighted geomean non-virtual intra-domain period: nan ns (nan MHz)

Incr Slack updates 1 in 4.458e-06 sec
Full Max Req/Worst Slack updates 1 in 1.991e-06 sec
Incr Max Req/Worst Slack updates 0 in 0 sec
Incr Criticality updates 0 in 0 sec
Full Criticality updates 1 in 2.522e-06 sec
Flow timing analysis took 0.00162416 seconds (0.00117104 STA, 0.000453116 slack) (64 full updates: 12 setup, 0 hold, 52 combined).
VPR suceeded
The entire flow of VPR took 0.86 seconds (max_rss 61.4 MiB)

Command line to execute: read_openfpga_arch -f /home/ahmad/Desktop/OpenFPGA_Work/lab11/run002/k6_frac_N10_tileable_adder_chain_dpram8K_dsp36_40nm/mac_2/MIN_ROUTE_CHAN_WIDTH/arch/k6_frac_N10_adder_chain_dpram8K_dsp36_40nm_openfpga.xml

Confirm selected options when call command 'read_openfpga_arch':
--file, -f: /home/ahmad/Desktop/OpenFPGA_Work/lab11/run002/k6_frac_N10_tileable_adder_chain_dpram8K_dsp36_40nm/mac_2/MIN_ROUTE_CHAN_WIDTH/arch/k6_frac_N10_adder_chain_dpram8K_dsp36_40nm_openfpga.xml
Reading XML architecture '/home/ahmad/Desktop/OpenFPGA_Work/lab11/run002/k6_frac_N10_tileable_adder_chain_dpram8K_dsp36_40nm/mac_2/MIN_ROUTE_CHAN_WIDTH/arch/k6_frac_N10_adder_chain_dpram8K_dsp36_40nm_openfpga.xml'...
Read OpenFPGA architecture
Warning 19: Automatically set circuit model 'frac_lut6' to be default in its type.
Warning 20: Automatically set circuit model 'DFFSRQ' to be default in its type.
Warning 21: Automatically set circuit model 'DFFR' to be default in its type.
Warning 22: Automatically set circuit model 'GPIO' to be default in its type.
Use the default configurable memory model 'DFFR' for circuit model 'mux_2level' port 'sram')
Use the default configurable memory model 'DFFR' for circuit model 'mux_2level_tapbuf' port 'sram')
Use the default configurable memory model 'DFFR' for circuit model 'mux_1level_tapbuf' port 'sram')
Use the default configurable memory model 'DFFR' for circuit model 'frac_lut6' port 'sram')
Read OpenFPGA architecture took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
Check circuit library
Checking circuit library passed.
Check circuit library took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
Found 0 errors when checking configurable memory circuit models!
Found 0 errors when checking tile annotation!

Command line to execute: read_openfpga_simulation_setting -f /home/ahmad/Desktop/Git/OpenFPGA/openfpga_flow/openfpga_simulation_settings/fixed_sim_openfpga.xml

Confirm selected options when call command 'read_openfpga_simulation_setting':
--file, -f: /home/ahmad/Desktop/Git/OpenFPGA/openfpga_flow/openfpga_simulation_settings/fixed_sim_openfpga.xml
Reading XML simulation setting '/home/ahmad/Desktop/Git/OpenFPGA/openfpga_flow/openfpga_simulation_settings/fixed_sim_openfpga.xml'...
Read OpenFPGA simulation settings
Read OpenFPGA simulation settings took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)

Command line to execute: link_openfpga_arch --activity_file mac_2_ace_out.act --sort_gsb_chan_node_in_edges

Confirm selected options when call command 'link_openfpga_arch':
--activity_file: mac_2_ace_out.act
--sort_gsb_chan_node_in_edges: on
--verbose: off
Link OpenFPGA architecture to VPR architecture
# Build fast look-up for physical tile pins
# Build fast look-up for physical tile pins took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)

Building annotation for physical modes in pb_type...Done
Check physical mode annotation for pb_types passed.

Building annotation about physical types for pb_type interconnection...Done

Building annotation between operating and physical pb_types...Done
Check physical pb_type annotation for pb_types passed.

Building annotation between physical pb_types and circuit models...Done
Check physical pb_type annotation for circuit model passed.

Building annotation between physical pb_types and mode selection bits...Done
Check pb_type annotation for mode selection bits passed.
Assigning unique indices for primitive pb_graph nodes...Done
Binding operating pb_graph nodes/pins to physical pb_graph nodes/pins...Done
Check pb_graph annotation for physical nodes and pins passed.
Binded 2 routing resource graph switches to circuit models
Binded 1 routing segments to circuit models
Binded 1 direct connections to circuit models
# Annotating rr_node with routed nets
# Annotating rr_node with routed nets took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
Loaded node-to-net mapping
Annotating previous nodes for rr_node...Warning 23: Override the previous node 'IPIN:3134 side: (BOTTOM,) (5,8)' by previous node 'IPIN:3130 side: (BOTTOM,) (5,8)' for node 'SINK:3085 (5,8)' with in routing context annotation!
Warning 24: Override the previous node 'IPIN:3130 side: (BOTTOM,) (5,8)' by previous node 'IPIN:3110 side: (RIGHT,) (5,8)' for node 'SINK:3085 (5,8)' with in routing context annotation!
Warning 25: Override the previous node 'IPIN:3110 side: (RIGHT,) (5,8)' by previous node 'IPIN:3109 side: (RIGHT,) (5,8)' for node 'SINK:3085 (5,8)' with in routing context annotation!
Warning 26: Override the previous node 'IPIN:3109 side: (RIGHT,) (5,8)' by previous node 'IPIN:3112 side: (RIGHT,) (5,8)' for node 'SINK:3085 (5,8)' with in routing context annotation!
Warning 27: Override the previous node 'IPIN:3112 side: (RIGHT,) (5,8)' by previous node 'IPIN:3145 side: (BOTTOM,) (5,8)' for node 'SINK:3085 (5,8)' with in routing context annotation!
Done with 61 nodes mapping
Built 16594 incoming edges for routing resource graph
# Build General Switch Block(GSB) annotation on top of routing resource graph
[1%] Backannotated GSB[0][0][2%] Backannotated GSB[0][1][3%] Backannotated GSB[0][2][4%] Backannotated GSB[0][3][6%] Backannotated GSB[0][4][7%] Backannotated GSB[0][5][8%] Backannotated GSB[0][6][9%] Backannotated GSB[0][7][11%] Backannotated GSB[0][8][12%] Backannotated GSB[1][0][13%] Backannotated GSB[1][1][14%] Backannotated GSB[1][2][16%] Backannotated GSB[1][3][17%] Backannotated GSB[1][4][18%] Backannotated GSB[1][5][19%] Backannotated GSB[1][6][20%] Backannotated GSB[1][7][22%] Backannotated GSB[1][8][23%] Backannotated GSB[2][0][24%] Backannotated GSB[2][1][25%] Backannotated GSB[2][2][27%] Backannotated GSB[2][3][28%] Backannotated GSB[2][4][29%] Backannotated GSB[2][5][30%] Backannotated GSB[2][6][32%] Backannotated GSB[2][7][33%] Backannotated GSB[2][8][34%] Backannotated GSB[3][0][35%] Backannotated GSB[3][1][37%] Backannotated GSB[3][2][38%] Backannotated GSB[3][3][39%] Backannotated GSB[3][4][40%] Backannotated GSB[3][5][41%] Backannotated GSB[3][6][43%] Backannotated GSB[3][7][44%] Backannotated GSB[3][8][45%] Backannotated GSB[4][0][46%] Backannotated GSB[4][1][48%] Backannotated GSB[4][2][49%] Backannotated GSB[4][3][50%] Backannotated GSB[4][4][51%] Backannotated GSB[4][5][53%] Backannotated GSB[4][6][54%] Backannotated GSB[4][7][55%] Backannotated GSB[4][8][56%] Backannotated GSB[5][0][58%] Backannotated GSB[5][1][59%] Backannotated GSB[5][2][60%] Backannotated GSB[5][3][61%] Backannotated GSB[5][4][62%] Backannotated GSB[5][5][64%] Backannotated GSB[5][6][65%] Backannotated GSB[5][7][66%] Backannotated GSB[5][8][67%] Backannotated GSB[6][0][69%] Backannotated GSB[6][1][70%] Backannotated GSB[6][2][71%] Backannotated GSB[6][3][72%] Backannotated GSB[6][4][74%] Backannotated GSB[6][5][75%] Backannotated GSB[6][6][76%] Backannotated GSB[6][7][77%] Backannotated GSB[6][8][79%] Backannotated GSB[7][0][80%] Backannotated GSB[7][1][81%] Backannotated GSB[7][2][82%] Backannotated GSB[7][3][83%] Backannotated GSB[7][4][85%] Backannotated GSB[7][5][86%] Backannotated GSB[7][6][87%] Backannotated GSB[7][7][88%] Backannotated GSB[7][8][90%] Backannotated GSB[8][0][91%] Backannotated GSB[8][1][92%] Backannotated GSB[8][2][93%] Backannotated GSB[8][3][95%] Backannotated GSB[8][4][96%] Backannotated GSB[8][5][97%] Backannotated GSB[8][6][98%] Backannotated GSB[8][7][100%] Backannotated GSB[8][8]Backannotated 81 General Switch Blocks (GSBs).
# Build General Switch Block(GSB) annotation on top of routing resource graph took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
# Sort incoming edges for each routing track output node of General Switch Block(GSB)
[1%] Sorted incoming edges for each routing track output node of GSB[0][0][2%] Sorted incoming edges for each routing track output node of GSB[0][1][3%] Sorted incoming edges for each routing track output node of GSB[0][2][4%] Sorted incoming edges for each routing track output node of GSB[0][3][6%] Sorted incoming edges for each routing track output node of GSB[0][4][7%] Sorted incoming edges for each routing track output node of GSB[0][5][8%] Sorted incoming edges for each routing track output node of GSB[0][6][9%] Sorted incoming edges for each routing track output node of GSB[0][7][11%] Sorted incoming edges for each routing track output node of GSB[0][8][12%] Sorted incoming edges for each routing track output node of GSB[1][0][13%] Sorted incoming edges for each routing track output node of GSB[1][1][14%] Sorted incoming edges for each routing track output node of GSB[1][2][16%] Sorted incoming edges for each routing track output node of GSB[1][3][17%] Sorted incoming edges for each routing track output node of GSB[1][4][18%] Sorted incoming edges for each routing track output node of GSB[1][5][19%] Sorted incoming edges for each routing track output node of GSB[1][6][20%] Sorted incoming edges for each routing track output node of GSB[1][7][22%] Sorted incoming edges for each routing track output node of GSB[1][8][23%] Sorted incoming edges for each routing track output node of GSB[2][0][24%] Sorted incoming edges for each routing track output node of GSB[2][1][25%] Sorted incoming edges for each routing track output node of GSB[2][2][27%] Sorted incoming edges for each routing track output node of GSB[2][3][28%] Sorted incoming edges for each routing track output node of GSB[2][4][29%] Sorted incoming edges for each routing track output node of GSB[2][5][30%] Sorted incoming edges for each routing track output node of GSB[2][6][32%] Sorted incoming edges for each routing track output node of GSB[2][7][33%] Sorted incoming edges for each routing track output node of GSB[2][8][34%] Sorted incoming edges for each routing track output node of GSB[3][0][35%] Sorted incoming edges for each routing track output node of GSB[3][1][37%] Sorted incoming edges for each routing track output node of GSB[3][2][38%] Sorted incoming edges for each routing track output node of GSB[3][3][39%] Sorted incoming edges for each routing track output node of GSB[3][4][40%] Sorted incoming edges for each routing track output node of GSB[3][5][41%] Sorted incoming edges for each routing track output node of GSB[3][6][43%] Sorted incoming edges for each routing track output node of GSB[3][7][44%] Sorted incoming edges for each routing track output node of GSB[3][8][45%] Sorted incoming edges for each routing track output node of GSB[4][0][46%] Sorted incoming edges for each routing track output node of GSB[4][1][48%] Sorted incoming edges for each routing track output node of GSB[4][2][49%] Sorted incoming edges for each routing track output node of GSB[4][3][50%] Sorted incoming edges for each routing track output node of GSB[4][4][51%] Sorted incoming edges for each routing track output node of GSB[4][5][53%] Sorted incoming edges for each routing track output node of GSB[4][6][54%] Sorted incoming edges for each routing track output node of GSB[4][7][55%] Sorted incoming edges for each routing track output node of GSB[4][8][56%] Sorted incoming edges for each routing track output node of GSB[5][0][58%] Sorted incoming edges for each routing track output node of GSB[5][1][59%] Sorted incoming edges for each routing track output node of GSB[5][2][60%] Sorted incoming edges for each routing track output node of GSB[5][3][61%] Sorted incoming edges for each routing track output node of GSB[5][4][62%] Sorted incoming edges for each routing track output node of GSB[5][5][64%] Sorted incoming edges for each routing track output node of GSB[5][6][65%] Sorted incoming edges for each routing track output node of GSB[5][7][66%] Sorted incoming edges for each routing track output node of GSB[5][8][67%] Sorted incoming edges for each routing track output node of GSB[6][0][69%] Sorted incoming edges for each routing track output node of GSB[6][1][70%] Sorted incoming edges for each routing track output node of GSB[6][2][71%] Sorted incoming edges for each routing track output node of GSB[6][3][72%] Sorted incoming edges for each routing track output node of GSB[6][4][74%] Sorted incoming edges for each routing track output node of GSB[6][5][75%] Sorted incoming edges for each routing track output node of GSB[6][6][76%] Sorted incoming edges for each routing track output node of GSB[6][7][77%] Sorted incoming edges for each routing track output node of GSB[6][8][79%] Sorted incoming edges for each routing track output node of GSB[7][0][80%] Sorted incoming edges for each routing track output node of GSB[7][1][81%] Sorted incoming edges for each routing track output node of GSB[7][2][82%] Sorted incoming edges for each routing track output node of GSB[7][3][83%] Sorted incoming edges for each routing track output node of GSB[7][4][85%] Sorted incoming edges for each routing track output node of GSB[7][5][86%] Sorted incoming edges for each routing track output node of GSB[7][6][87%] Sorted incoming edges for each routing track output node of GSB[7][7][88%] Sorted incoming edges for each routing track output node of GSB[7][8][90%] Sorted incoming edges for each routing track output node of GSB[8][0][91%] Sorted incoming edges for each routing track output node of GSB[8][1][92%] Sorted incoming edges for each routing track output node of GSB[8][2][93%] Sorted incoming edges for each routing track output node of GSB[8][3][95%] Sorted incoming edges for each routing track output node of GSB[8][4][96%] Sorted incoming edges for each routing track output node of GSB[8][5][97%] Sorted incoming edges for each routing track output node of GSB[8][6][98%] Sorted incoming edges for each routing track output node of GSB[8][7][100%] Sorted incoming edges for each routing track output node of GSB[8][8]Sorted incoming edges for each routing track output node of 81 General Switch Blocks (GSBs).
# Sort incoming edges for each routing track output node of General Switch Block(GSB) took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
# Sort incoming edges for each input pin node of General Switch Block(GSB)
[1%] Sorted incoming edges for each input pin node of GSB[0][0][2%] Sorted incoming edges for each input pin node of GSB[0][1][3%] Sorted incoming edges for each input pin node of GSB[0][2][4%] Sorted incoming edges for each input pin node of GSB[0][3][6%] Sorted incoming edges for each input pin node of GSB[0][4][7%] Sorted incoming edges for each input pin node of GSB[0][5][8%] Sorted incoming edges for each input pin node of GSB[0][6][9%] Sorted incoming edges for each input pin node of GSB[0][7][11%] Sorted incoming edges for each input pin node of GSB[0][8][12%] Sorted incoming edges for each input pin node of GSB[1][0][13%] Sorted incoming edges for each input pin node of GSB[1][1][14%] Sorted incoming edges for each input pin node of GSB[1][2][16%] Sorted incoming edges for each input pin node of GSB[1][3][17%] Sorted incoming edges for each input pin node of GSB[1][4][18%] Sorted incoming edges for each input pin node of GSB[1][5][19%] Sorted incoming edges for each input pin node of GSB[1][6][20%] Sorted incoming edges for each input pin node of GSB[1][7][22%] Sorted incoming edges for each input pin node of GSB[1][8][23%] Sorted incoming edges for each input pin node of GSB[2][0][24%] Sorted incoming edges for each input pin node of GSB[2][1][25%] Sorted incoming edges for each input pin node of GSB[2][2][27%] Sorted incoming edges for each input pin node of GSB[2][3][28%] Sorted incoming edges for each input pin node of GSB[2][4][29%] Sorted incoming edges for each input pin node of GSB[2][5][30%] Sorted incoming edges for each input pin node of GSB[2][6][32%] Sorted incoming edges for each input pin node of GSB[2][7][33%] Sorted incoming edges for each input pin node of GSB[2][8][34%] Sorted incoming edges for each input pin node of GSB[3][0][35%] Sorted incoming edges for each input pin node of GSB[3][1][37%] Sorted incoming edges for each input pin node of GSB[3][2][38%] Sorted incoming edges for each input pin node of GSB[3][3][39%] Sorted incoming edges for each input pin node of GSB[3][4][40%] Sorted incoming edges for each input pin node of GSB[3][5][41%] Sorted incoming edges for each input pin node of GSB[3][6][43%] Sorted incoming edges for each input pin node of GSB[3][7][44%] Sorted incoming edges for each input pin node of GSB[3][8][45%] Sorted incoming edges for each input pin node of GSB[4][0][46%] Sorted incoming edges for each input pin node of GSB[4][1][48%] Sorted incoming edges for each input pin node of GSB[4][2][49%] Sorted incoming edges for each input pin node of GSB[4][3][50%] Sorted incoming edges for each input pin node of GSB[4][4][51%] Sorted incoming edges for each input pin node of GSB[4][5][53%] Sorted incoming edges for each input pin node of GSB[4][6][54%] Sorted incoming edges for each input pin node of GSB[4][7][55%] Sorted incoming edges for each input pin node of GSB[4][8][56%] Sorted incoming edges for each input pin node of GSB[5][0][58%] Sorted incoming edges for each input pin node of GSB[5][1][59%] Sorted incoming edges for each input pin node of GSB[5][2][60%] Sorted incoming edges for each input pin node of GSB[5][3][61%] Sorted incoming edges for each input pin node of GSB[5][4][62%] Sorted incoming edges for each input pin node of GSB[5][5][64%] Sorted incoming edges for each input pin node of GSB[5][6][65%] Sorted incoming edges for each input pin node of GSB[5][7][66%] Sorted incoming edges for each input pin node of GSB[5][8][67%] Sorted incoming edges for each input pin node of GSB[6][0][69%] Sorted incoming edges for each input pin node of GSB[6][1][70%] Sorted incoming edges for each input pin node of GSB[6][2][71%] Sorted incoming edges for each input pin node of GSB[6][3][72%] Sorted incoming edges for each input pin node of GSB[6][4][74%] Sorted incoming edges for each input pin node of GSB[6][5][75%] Sorted incoming edges for each input pin node of GSB[6][6][76%] Sorted incoming edges for each input pin node of GSB[6][7][77%] Sorted incoming edges for each input pin node of GSB[6][8][79%] Sorted incoming edges for each input pin node of GSB[7][0][80%] Sorted incoming edges for each input pin node of GSB[7][1][81%] Sorted incoming edges for each input pin node of GSB[7][2][82%] Sorted incoming edges for each input pin node of GSB[7][3][83%] Sorted incoming edges for each input pin node of GSB[7][4][85%] Sorted incoming edges for each input pin node of GSB[7][5][86%] Sorted incoming edges for each input pin node of GSB[7][6][87%] Sorted incoming edges for each input pin node of GSB[7][7][88%] Sorted incoming edges for each input pin node of GSB[7][8][90%] Sorted incoming edges for each input pin node of GSB[8][0][91%] Sorted incoming edges for each input pin node of GSB[8][1][92%] Sorted incoming edges for each input pin node of GSB[8][2][93%] Sorted incoming edges for each input pin node of GSB[8][3][95%] Sorted incoming edges for each input pin node of GSB[8][4][96%] Sorted incoming edges for each input pin node of GSB[8][5][97%] Sorted incoming edges for each input pin node of GSB[8][6][98%] Sorted incoming edges for each input pin node of GSB[8][7][100%] Sorted incoming edges for each input pin node of GSB[8][8]Sorted incoming edges for each input pin node of 81 General Switch Blocks (GSBs).
# Sort incoming edges for each input pin node of General Switch Block(GSB) took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
# Build a library of physical multiplexers
Built a multiplexer library of 25 physical multiplexers.
Maximum multiplexer size is 64.
# Build a library of physical multiplexers took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
# Build the annotation about direct connection between tiles
Built 35 tile-to-tile direct connections
# Build the annotation about direct connection between tiles took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
Building annotation for post-routing and clustering synchornization results...Done
Building annotation for mapped blocks on grid locations...Done
Will apply operating clock frequency 500 [MHz] to simulations
Will apply 10 operating clock cycles to simulations
Link OpenFPGA architecture to VPR architecture took 0.02 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)

Command line to execute: check_netlist_naming_conflict --fix --report ./netlist_renaming.xml

Confirm selected options when call command 'check_netlist_naming_conflict':
--fix: on
--report: ./netlist_renaming.xml
Check naming violations of netlist blocks and nets
Fixed 24 naming conflicts in the netlist.
Naming fix-up report is generated to file './netlist_renaming.xml'
Check naming violations of netlist blocks and nets took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)

Command line to execute: lut_truth_table_fixup

Confirm selected options when call command 'lut_truth_table_fixup':
--verbose: off
Fix up LUT truth tables after packing optimization
Fix up LUT truth tables after packing optimization took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)

Command line to execute: build_fabric --compress_routing

Confirm selected options when call command 'build_fabric':
--frame_view: off
--compress_routing: on
--duplicate_grid_pin: off
--load_fabric_key: off
--write_fabric_key: off
--generate_random_fabric_key: off
--verbose: off
Identify unique General Switch Blocks (GSBs)
Detected 58 unique general switch blocks from a total of 81 (compression rate=39.66%)
Identify unique General Switch Blocks (GSBs) took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)


Build fabric module graph
# Build constant generator modules
# Build constant generator modules took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
# Build user-defined modules
# Build user-defined modules took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
# Build essential (inverter/buffer/logic gate) modules
# Build essential (inverter/buffer/logic gate) modules took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
# Build local encoder (for multiplexers) modules
# Build local encoder (for multiplexers) modules took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
# Building multiplexer modules
# Building multiplexer modules took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
# Build Look-Up Table (LUT) modules
# Build Look-Up Table (LUT) modules took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
# Build wire modules
# Build wire modules took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
# Build memory modules
# Build memory modules took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
# Build grid modules
Building logical tiles...Done
Building physical tiles...Done
# Build grid modules took 0.01 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
# Build unique routing modules...
# Build unique routing modules... took 0.05 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
# Build FPGA fabric module
## Add grid instances to top module
## Add grid instances to top module took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
## Add switch block instances to top module
## Add switch block instances to top module took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
## Add connection block instances to top module
## Add connection block instances to top module took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
## Add connection block instances to top module
## Add connection block instances to top module took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
## Add module nets between grids and GSBs
## Add module nets between grids and GSBs took 0.03 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
## Add module nets for inter-tile connections
## Add module nets for inter-tile connections took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
## Build configurable regions for the top module
## Build configurable regions for the top module took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
## Add module nets for configuration buses
## Add module nets for configuration buses took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
# Build FPGA fabric module took 0.04 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
Build fabric module graph took 0.11 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
Create I/O location mapping for top module
Create I/O location mapping for top module took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
Create global port info for top module
Create global port info for top module took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)

Command line to execute: write_fabric_hierarchy --file ./fabric_hierarchy.txt

Confirm selected options when call command 'write_fabric_hierarchy':
--file, -f: ./fabric_hierarchy.txt
--depth: off
--verbose: off
Warning 28: Directory '.' already exists. Will overwrite contents
Write fabric hierarchy to plain-text file './fabric_hierarchy.txt'
Write fabric hierarchy to plain-text file './fabric_hierarchy.txt' took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)

Command line to execute: repack

Confirm selected options when call command 'repack':
--design_constraints: off
--ignore_global_nets_on_pins: off
--verbose: off
Build routing resource graph for the physical implementation of logical tile
Build routing resource graph for the physical implementation of logical tile took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
Repack clustered blocks to physical implementation of logical tile
Repack clustered block 'out[1]'...Done
Repack clustered block 'out:out[1]'...Done
Repack clustered block 'out:out[2]'...Done
Repack clustered block 'out:out[3]'...Done
Repack clustered block 'out:out[0]'...Done
Repack clustered block 'a[0]'...Done
Repack clustered block 'a[1]'...Done
Repack clustered block 'b[0]'...Done
Repack clustered block 'b[1]'...Done
Repack clustered block 'c[0]'...Done
Repack clustered block 'c[1]'...Done
Repack clustered blocks to physical implementation of logical tile took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
Identify wire LUTs created by repacking
Identified 0 wire LUTs created by repacker
Identify wire LUTs created by repacking took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
Build truth tables for physical LUTs
Build truth tables for physical LUTs took 0.00 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)

Command line to execute: build_architecture_bitstream --verbose --write_file fabric_independent_bitstream.xml

Confirm selected options when call command 'build_architecture_bitstream':
--write_file: fabric_independent_bitstream.xml
--read_file: off
--no_time_stamp: off
--verbose: on

Build fabric-independent bitstream for implementation 'mac_2'

Reserved 9133 configurable blocks
Reserved 75676 configuration bits
Building grid bitstream...
Generating bitstream for core grids...Done
Generating bitstream for I/O grids...Done
Done
Building routing bitstream...
Generating bitstream for Switch blocks...Done
Generating bitstream for X-direction Connection blocks ...Done
Generating bitstream for Y-direction Connection blocks ...Done
Done
Decoded 75676 configuration bits into 9133 blocks

Build fabric-independent bitstream for implementation 'mac_2'
 took 0.06 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)
Warning 29: Directory path is empty and nothing will be created.
Write 75676 architecture independent bitstream into XML file 'fabric_independent_bitstream.xml'
Write 75676 architecture independent bitstream into XML file 'fabric_independent_bitstream.xml' took 0.46 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)

Command line to execute: build_fabric_bitstream --verbose

Confirm selected options when call command 'build_fabric_bitstream':
--verbose: on

Build fabric dependent bitstream

Built 75676 configuration bits for fabric

Build fabric dependent bitstream
 took 0.02 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)

Command line to execute: write_fabric_bitstream --file fabric_bitstream.bit --format plain_text

Confirm selected options when call command 'write_fabric_bitstream':
--file, -f: fabric_bitstream.bit
--format: plain_text
--fast_configuration: off
--keep_dont_care_bits: off
--no_time_stamp: off
--verbose: off
Warning 30: Directory path is empty and nothing will be created.
Write 75676 fabric bitstream into plain text file 'fabric_bitstream.bit'
Write 75676 fabric bitstream into plain text file 'fabric_bitstream.bit' took 0.18 seconds (max_rss 61.4 MiB, delta_rss +0.0 MiB)

Command line to execute: write_fabric_verilog --file ./SRC --explicit_port_mapping --include_timing --print_user_defined_template --verbose

Confirm selected options when call command 'write_fabric_verilog':
--file, -f: ./SRC
--explicit_port_mapping: on
--include_timing: on
--print_user_defined_template: on
--default_net_type: off
--no_time_stamp: off
--use_relative_path: off
--verbose: on
Write Verilog netlists for FPGA fabric

Succeed to create directory './SRC'
Succeed to create directory './SRC/sub_module'
Succeed to create directory './SRC/lb'
Succeed to create directory './SRC/routing'
Generating Verilog netlist './SRC/sub_module/inv_buf_passgate.v' for essential gates...Done
Writing Verilog netlist for configuration decoders './SRC/sub_module/arch_encoder.v'...Done
Writing Verilog netlist for local decoders for multiplexers './SRC/sub_module/local_encoder.v'...Done
Writing Verilog netlist for Multiplexer primitives './SRC/sub_module/mux_primitives.v' ...Done
Writing Verilog netlist for Multiplexers './SRC/sub_module/muxes.v' ...Done
Writing Verilog netlist for LUTs './SRC/sub_module/luts.v'...Done
Writing Verilog netlist for wires './SRC/sub_module/wires.v'...Done
Writing Verilog netlist for memories './SRC/sub_module/memories.v' ...Done
Writing Verilog netlist for shift register banks './SRC/sub_module/shift_register_banks.v' ...Done
Creating template for user-defined Verilog modules './SRC/sub_module/user_defined_templates.v'...Done

Writing logical tiles...
Writing Verilog netlists for logic tile 'io' ...
Writing Verilog netlist './SRC/lb/logical_tile_io_mode_physical__iopad.v' for primitive pb_type 'iopad' ...
Writing Verilog codes of logical tile primitive block 'logical_tile_io_mode_physical__iopad'...Done
Writing Verilog netlist './SRC/lb/logical_tile_io_mode_io_.v' for pb_type 'io' ...
Writing Verilog codes of pb_type 'logical_tile_io_mode_io_'...Done
Done

Writing Verilog netlists for logic tile 'clb' ...
Writing Verilog netlist './SRC/lb/logical_tile_clb_mode_default__fle_mode_physical__fabric_mode_default__frac_logic_mode_default__frac_lut6.v' for primitive pb_type 'frac_lut6' ...
Writing Verilog codes of logical tile primitive block 'logical_tile_clb_mode_default__fle_mode_physical__fabric_mode_default__frac_logic_mode_default__frac_lut6'...Done
Writing Verilog netlist './SRC/lb/logical_tile_clb_mode_default__fle_mode_physical__fabric_mode_default__frac_logic.v' for pb_type 'frac_logic' ...
Writing Verilog codes of pb_type 'logical_tile_clb_mode_default__fle_mode_physical__fabric_mode_default__frac_logic'...Done
Writing Verilog netlist './SRC/lb/logical_tile_clb_mode_default__fle_mode_physical__fabric_mode_default__ff.v' for primitive pb_type 'ff' ...
Writing Verilog codes of logical tile primitive block 'logical_tile_clb_mode_default__fle_mode_physical__fabric_mode_default__ff'...Done
Writing Verilog netlist './SRC/lb/logical_tile_clb_mode_default__fle_mode_physical__fabric_mode_default__adder.v' for primitive pb_type 'adder' ...
Writing Verilog codes of logical tile primitive block 'logical_tile_clb_mode_default__fle_mode_physical__fabric_mode_default__adder'...Done
Writing Verilog netlist './SRC/lb/logical_tile_clb_mode_default__fle_mode_physical__fabric.v' for pb_type 'fabric' ...
Writing Verilog codes of pb_type 'logical_tile_clb_mode_default__fle_mode_physical__fabric'...Done
Writing Verilog netlist './SRC/lb/logical_tile_clb_mode_default__fle.v' for pb_type 'fle' ...
Writing Verilog codes of pb_type 'logical_tile_clb_mode_default__fle'...Done
Writing Verilog netlist './SRC/lb/logical_tile_clb_mode_clb_.v' for pb_type 'clb' ...
Writing Verilog codes of pb_type 'logical_tile_clb_mode_clb_'...Done
Done

Writing Verilog netlists for logic tile 'mult_36' ...
Writing Verilog netlist './SRC/lb/logical_tile_mult_36_mode_mult_36x36__mult_36x36_slice_mode_default__mult_36x36.v' for primitive pb_type 'mult_36x36' ...
Writing Verilog codes of logical tile primitive block 'logical_tile_mult_36_mode_mult_36x36__mult_36x36_slice_mode_default__mult_36x36'...Done
Writing Verilog netlist './SRC/lb/logical_tile_mult_36_mode_mult_36x36__mult_36x36_slice.v' for pb_type 'mult_36x36_slice' ...
Writing Verilog codes of pb_type 'logical_tile_mult_36_mode_mult_36x36__mult_36x36_slice'...Done
Writing Verilog netlist './SRC/lb/logical_tile_mult_36_mode_mult_36_.v' for pb_type 'mult_36' ...
Writing Verilog codes of pb_type 'logical_tile_mult_36_mode_mult_36_'...Done
Done

Writing Verilog netlists for logic tile 'memory' ...
Writing Verilog netlist './SRC/lb/logical_tile_memory_mode_mem_1024x8_dp__mem_1024x8_dp.v' for primitive pb_type 'mem_1024x8_dp' ...
Writing Verilog codes of logical tile primitive block 'logical_tile_memory_mode_mem_1024x8_dp__mem_1024x8_dp'...Done
Writing Verilog netlist './SRC/lb/logical_tile_memory_mode_memory_.v' for pb_type 'memory' ...
Writing Verilog codes of pb_type 'logical_tile_memory_mode_memory_'...Done
Done

Writing logical tiles...Done

Building physical tiles...
Writing Verilog Netlist './SRC/lb/grid_io_top.v' for physical tile 'io' at top side ...Done
Writing Verilog Netlist './SRC/lb/grid_io_right.v' for physical tile 'io' at right side ...Done
Writing Verilog Netlist './SRC/lb/grid_io_bottom.v' for physical tile 'io' at bottom side ...Done
Writing Verilog Netlist './SRC/lb/grid_io_left.v' for physical tile 'io' at left side ...Done
Writing Verilog Netlist './SRC/lb/grid_clb.v' for physical_tile 'clb'...Done
Writing Verilog Netlist './SRC/lb/grid_memory.v' for physical_tile 'memory'...Done
Writing Verilog Netlist './SRC/lb/grid_mult_36.v' for physical_tile 'mult_36'...Done
Building physical tiles...Done

Writing Verilog netlist for top-level module of FPGA fabric './SRC/fpga_top.v'...Done
Written 208 Verilog modules in total
Write Verilog netlists for FPGA fabric
 took 0.38 seconds (max_rss 61.7 MiB, delta_rss +0.4 MiB)

Command line to execute: write_full_testbench --file ./SRC --reference_benchmark_file_path mac_2_output_verilog.v --include_signal_init --bitstream fabric_bitstream.bit

Confirm selected options when call command 'write_full_testbench':
--file, -f: ./SRC
--bitstream: fabric_bitstream.bit
--fabric_netlist_file_path: off
--pin_constraints_file, -pcf: off
--bus_group_file, -bgf: off
--reference_benchmark_file_path: mac_2_output_verilog.v
--fast_configuration: off
--explicit_port_mapping: off
--default_net_type: off
--no_self_checking: off
--include_signal_init: on
--no_time_stamp: off
--use_relative_path: off
--verbose: off
Write Verilog full testbenches for FPGA fabric

Warning 31: Directory './SRC' already exists. Will overwrite contents
# Write autocheck testbench for FPGA top-level Verilog netlist for 'mac_2'
Will use 75677 configuration clock cycles to top testbench
# Write autocheck testbench for FPGA top-level Verilog netlist for 'mac_2' took 3.30 seconds (max_rss 61.7 MiB, delta_rss +0.0 MiB)
Write Verilog full testbenches for FPGA fabric
 took 3.30 seconds (max_rss 61.7 MiB, delta_rss +0.0 MiB)

Command line to execute: write_pnr_sdc --file ./SDC

Confirm selected options when call command 'write_pnr_sdc':
--file, -f: ./SDC
--flatten_names: off
--hierarchical: off
--output_hierarchy: off
--time_unit: off
--constrain_global_port: off
--constrain_non_clock_global_port: off
--constrain_grid: off
--constrain_sb: off
--constrain_cb: off
--constrain_configurable_memory_outputs: off
--constrain_routing_multiplexer_outputs: off
--constrain_switch_block_outputs: off
--constrain_zero_delay_paths: off
--no_time_stamp: off
--verbose: off
Succeed to create directory './SDC'
Write SDC for constraining clocks for P&R flow './SDC/global_ports.sdc'
Write SDC for constraining clocks for P&R flow './SDC/global_ports.sdc' took 0.00 seconds (max_rss 61.7 MiB, delta_rss +0.0 MiB)
Write SDC to disable configurable memory outputs for P&R flow './SDC/disable_configurable_memory_outputs.sdc'
Write SDC to disable configurable memory outputs for P&R flow './SDC/disable_configurable_memory_outputs.sdc' took 0.00 seconds (max_rss 61.7 MiB, delta_rss +0.0 MiB)
Write SDC to disable routing multiplexer outputs for P&R flow './SDC/disable_routing_multiplexer_outputs.sdc'
Write SDC to disable routing multiplexer outputs for P&R flow './SDC/disable_routing_multiplexer_outputs.sdc' took 0.16 seconds (max_rss 61.7 MiB, delta_rss +0.0 MiB)
Write SDC to disable switch block outputs for P&R flow './SDC/disable_sb_outputs.sdc'
Write SDC to disable switch block outputs for P&R flow './SDC/disable_sb_outputs.sdc' took 0.00 seconds (max_rss 61.7 MiB, delta_rss +0.0 MiB)
Write SDC for constrain Switch Block timing for P&R flow
Write SDC for constrain Switch Block timing for P&R flow took 0.03 seconds (max_rss 61.7 MiB, delta_rss +0.0 MiB)
Write SDC for constrain Connection Block timing for P&R flow
Write SDC for constrain Connection Block timing for P&R flow took 0.02 seconds (max_rss 61.7 MiB, delta_rss +0.0 MiB)
Write SDC for constraining grid timing for P&R flow
Write SDC for constraining grid timing for P&R flow took 0.14 seconds (max_rss 61.7 MiB, delta_rss +0.0 MiB)

Command line to execute: write_sdc_disable_timing_configure_ports --file ./SDC/disable_configure_ports.sdc

Confirm selected options when call command 'write_sdc_disable_timing_configure_ports':
--file, -f: ./SDC/disable_configure_ports.sdc
--flatten_names: off
--no_time_stamp: off
--verbose: off
Warning 32: Directory './SDC' already exists. Will overwrite contents
Write SDC to disable timing on configuration outputs of programmable cells for P&R flow './SDC/disable_configure_ports.sdc'
Write SDC to disable timing on configuration outputs of programmable cells for P&R flow './SDC/disable_configure_ports.sdc' took 0.34 seconds (max_rss 61.7 MiB, delta_rss +0.0 MiB)

Command line to execute: write_analysis_sdc --file ./SDC_analysis

Confirm selected options when call command 'write_analysis_sdc':
--file, -f: ./SDC_analysis
--verbose: off
--flatten_names: off
--time_unit: off
--no_time_stamp: off
Succeed to create directory './SDC_analysis'
Generating SDC for Timing/Power analysis on the mapped FPGA './SDC_analysis/mac_2_fpga_top_analysis.sdc'
Generating SDC for Timing/Power analysis on the mapped FPGA './SDC_analysis/mac_2_fpga_top_analysis.sdc' took 0.17 seconds (max_rss 61.7 MiB, delta_rss +0.0 MiB)

Command line to execute: exit

Confirm selected options when call command 'exit':

Finish execution with 0 errors

The entire OpenFPGA flow took 6.16812 seconds

Thank you for using OpenFPGA!
Incr Slack updates 51 in 0.000124416 sec
Full Max Req/Worst Slack updates 12 in 2.1982e-05 sec
Incr Max Req/Worst Slack updates 39 in 4.932e-05 sec
Incr Criticality updates 19 in 3.3187e-05 sec
Full Criticality updates 32 in 5.932e-05 sec
